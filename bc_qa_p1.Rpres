GPC Breast Cancer Data by Site
==============================
author: Dan Connolly
date: 20 Feb 2015
width: 1536
height: 864
transition: fade

Graphs by Site
========================================================

Generated `r Sys.Date()`

Modelled after Graphs by Elizabeth A. Chrischilles, PhD 18 Feb 2015

```{r echo=FALSE}
opts_chunk$set(fig.width=8,fig.height=4.5,dpi=300,out.width="1920px",height="1080px")

source('bc_qa_txform.R')

load("bc_fetch_results.RData")
load("bc_terms_results.RData")

library(ggplot2)
library(grid)
```


Needed for Exclusions
=====================

 - Primary site
 - Sex
 - Sequence Number
 - Diagnostic Confirmation
 - Morphology Code
 - Derived AJCC-7 Grp and/or SS2000
 - Vital Status

Patients
========

```{r echo=FALSE}
current <- fetch$dataset  # anachronism
site.code <- factor(fetch$dataset$site)
```

```{r echo=FALSE}
query.site <- function(q, site) {
  conn <- fetch$site.data(site)
  dbGetQuery(conn, q)
}

query.each.site <- function(key, q,
                            current=fetch$dataset) {
  data.frame(
    site=site.code,
    key=key,
    result=unlist(lapply(current$site, function(s) query.site(q, s)))
    )
}

patients <- rbind(
  query.each.site(
    'data',
    'select count(distinct patient_num) from observation_fact'),
  query.each.site(
    'patient_dimension',
    'select count(*) from patient_dimension'),
  query.each.site(
    'tumor',
    "
    select count(distinct encounter_num)
    from observation_fact f
    join concept_dimension cd
    on cd.concept_cd = f.concept_cd
    where cd.concept_path like '%naaccr%'
    "
    ))

```

```{r echo=FALSE}
site.tumor.data <- lapply(site.code, function(s) {
  message('working on site: ', s)
  bc.exclusions(fetch$site.data(s))
  })
names(site.tumor.data) <- levels(site.code)

rbind.sites <- function(df.site) {
  df <- NULL
  for (ix in 1:length(site.code)) {
    site <- site.code[ix]

    x <- df.site[[site]]

    if (nrow(x) > 0) {
      x$site <- site
      names <- names(x)
      if (is.null(df)) {
        df <- x
        } else {
          df <- rbind(df, x)
          }
      }
    }
  df
}

tumor.all <- rbind.sites(site.tumor.data)
```

```{r echo=FALSE}
pat.per.site <- function(df) {
  as.vector(table(unique(df[, c('site', 'patient_num')])$site))
  }

patients.vital <- rbind(
  patients,
  data.frame(
    site=site.code,
    key='w/Vital from SEER/EHR',
    result=pat.per.site(tumor.all[!is.na(tumor.all$vital), ])),

  data.frame(
    site=site.code,
    key='w/Deceased from EHR (data)',
    result=pat.per.site(tumor.all[!is.na(tumor.all$deceased.ehr), ])),

  query.each.site(
    'vital: patient_dimension',
    'select count(*) from patient_dimension
     where vital_status_cd is not null')
)

```

```{r eval=FALSE, echo=FALSE}
#Scratchpad...

var.site <- function(naaccr.name, var.name) {
  function(site) {
    conn <- site.data(site)
    v.enc(conn, var204$concept_path[grep(naaccr.name, var204$name)], var.name)
    }
  }

dx.site <- var.site('0390 Date of Diagnosis', 'dx')
site$tumor <- unlist(lapply(site.code,
                   function (s) nrow(dx.site(s))))
```

Number of Breast Cancer Patients and Tumors by Site
===================================================


```{r echo=FALSE}

fig1 <- ggplot(data=patients, mapping=aes(x=site, y=result, fill=key), fill=key)

# text dodge clue: http://stackoverflow.com/a/6017961
style.dodge <- function(fig) {
  fig + geom_bar(stat = "identity", position="dodge") +
    labs(x="", y="") +
    theme(legend.position=c(0.9, 0.8)) +
    geom_text(data=fig$data, aes(label = result),
                  position = position_dodge(width=0.9), angle=45)
  }
style.dodge(fig1)
```

**TODO: tumors in date range**
**TODO: how did they count tumors?**


Number with Vital Status, by Site
=================================

```{r echo=FALSE}

fig2 <- ggplot(subset(patients.vital, key %in% c('patient_dimension', 'w/Vital from SEER/EHR')),
               aes(x=site, y=result, fill=key))
style.dodge(fig2)
```


Number in “Final” Survey-Eligible Cohort by Site*
=================================================


```{r echo=FALSE}
site.survey.sample <- lapply(site.code, function(s) {
  message('working on site: ', s)
  check.cases(site.tumor.data[[s]])
  })
names(site.survey.sample) <- levels(site.code)

patients.eligible <- function(last.crit) rbind(
  query.each.site(
    'Number of patients (data dim.)',
    'select count(distinct patient_num) from observation_fact'),
  data.frame(
    site=site.code,
    key='Number after exclusions',
    result=unlist(lapply(site.code, function(s) {
      qty <- count.cases(check.cases(site.tumor.data[[s]]))
      qty['cumulative', last.crit]
      
      }))))
patients.eligible.stage <- patients.eligible('stage.ok')
patients.eligible.prior <- patients.eligible('no.prior')
```

```{r echo=FALSE}

fig2 <- ggplot(subset(patients.eligible.stage,
                      key %in% c('Number of patients (data dim.)', 'Number after exclusions')),
               aes(x=site, y=result, fill=key))
style.dodge(fig2)
```

Number in “Final” Survey-Eligible Cohort by Site*
=================================================

*not excluding prior diagnosis

*TODO: Percent eligible for survey*

*TODO: what's the difference between "after exclusions" and "eligible for survey"?*

Number in “Final” Survey-Eligible Cohort by Site
================================================

```{r echo=FALSE}

fig2 <- ggplot(subset(patients.eligible.prior,
                      key %in% c('Number of patients (data dim.)', 'Number after exclusions')),
               aes(x=site, y=result, fill=key))
style.dodge(fig2)
```

excluding prior diagnosis this time

Number of Breast Cancer Patients with EMR Vital Status by Site
==============================================================

*Note: the EMR query term was deceased, not vital status.*

```{r echo=FALSE}
fig2 <- ggplot(subset(patients.vital, key %in% c('w/Vital from EHR (data)', 'vital: patient_dimension')),
               aes(x=site, y=result, fill=key))
style.dodge(fig2)
```


Tumors
======

```{r echo=FALSE}
var204 <- bcterm$term204  # anachonism

site.tumor.var <- function(naaccr.name) {
  function(s) {
    df <- v.enc.nominal(fetch$site.data(s),
                        unique(var204$concept_path[grep(naaccr.name, var204$name)]),
                        'x')
    nrow(df)
    }
  }


tumor.by.site <- rbind.data.frame(
  subset(patients, key == 'tumor'),
  
  data.frame(
    site=site.code,
    key='w/Primary Site',
    result=unlist(lapply(site.code, site.tumor.var('0400 Primary'))))
  )

```

Number of Tumors Overall and With Primary Site, by Site
=======================================================

```{r echo=FALSE}
fig5 <- ggplot(tumor.by.site, aes(x=site, y=result, fill=key))
style.dodge(fig5)
```
